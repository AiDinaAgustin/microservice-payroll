services:
  api-router:
    image: alpine:latest
    command: sh -c "while true; do sleep 3600; done"
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        # Main router that users access through api.karsa.site
        - "traefik.http.routers.api-main.rule=Host(`api.karsa.site`)"
        - "traefik.http.routers.api-main.entrypoints=websecure"
        - "traefik.http.routers.api-main.tls.certresolver=myresolver"
        - "traefik.http.routers.api-main.service=api-lb"

        # Load balancer service that distributes traffic
        - "traefik.http.services.api-lb.loadbalancer.server.scheme=https"
        - "traefik.http.services.api-lb.loadbalancer.healthcheck.path=/health"
        - "traefik.http.services.api-lb.loadbalancer.healthcheck.interval=5s"
        - "traefik.http.services.api-lb.loadbalancer.healthcheck.timeout=3s"

        # Enable pass-through of the original URL paths
        - "traefik.http.middlewares.preserve-path.forwardauth.address=http://localhost"
        - "traefik.http.middlewares.preserve-path.forwardauth.authResponseHeaders=X-Forwarded-Uri"
        - "traefik.http.routers.api-main.middlewares=preserve-path"

        # Server pool - primary server with higher weight
        - "traefik.http.services.api-lb.loadbalancer.server.port=443"
        - "traefik.http.services.api-lb.loadbalancer.server.url=https://api-1.karsa.site"
        - "traefik.http.services.api-lb.loadbalancer.server.weight=3"

        # Backup server with lower weight
        - "traefik.http.services.api-lb.loadbalancer.server.url.2=https://api-2.karsa.site"
        - "traefik.http.services.api-lb.loadbalancer.server.weight.2=1"

networks:
  traefik-public:
    external: true
    name: tascrum_traefik-public